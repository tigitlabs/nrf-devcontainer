# Docker file for nRF CI
FROM mcr.microsoft.com/devcontainers/base:ubuntu-24.04

ARG NRF_TOOLCHAIN_VERSION="v3.0.1"
ENV NRF_TOOLCHAIN_VERSION=${NRF_TOOLCHAIN_VERSION}

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
    bash-completion \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-tk \
    python3-wheel \
    cmake \
    ninja-build \
    gperf \
    ccache \
    dfu-util \
    device-tree-compiler \
    xz-utils file \
    make \
    gcc \
    gcc-multilib \
    g++-multilib \
    libsdl2-dev \
    libmagic1 \
    pipx \
    udev && \
    apt-get autoremove -y && apt-get clean -y

USER vscode
# RUN python3 -m venv /workspaces/ncs/.venv
# RUN .venv/bin/pip install west
RUN pipx ensurepath
RUN pipx install west
ENV PATH="/home/vscode/.local/bin:$PATH"

WORKDIR /workspaces/ncs/
RUN west init -m https://github.com/nrfconnect/sdk-nrf --mr ${NRF_TOOLCHAIN_VERSION} ${NRF_TOOLCHAIN_VERSION}
WORKDIR /workspaces/ncs/${NRF_TOOLCHAIN_VERSION}
RUN west update
RUN west zephyr-export
RUN west packages pip --install
RUN west sdk install

ENV ZEPHYR_BASE="/workspaces/ncs/${NRF_TOOLCHAIN_VERSION}"/zephyr
ENV PATH="/home/vscode/.local/share/pipx/venvs/west/bin/:$PATH"
WORKDIR /workspaces/nrf-devcontainer

USER root
WORKDIR /tmp
COPY JLink_Linux_V832_x86_64.deb /tmp/JLink_Linux_V832_x86_64.deb
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libxcb-render0 \
        libxcb-render-util0 \
        libxcb-shape0 \
        libxcb-icccm4 \
        libxcb-keysyms1 \
        libxcb-image0 \
        libxkbcommon-x11-0
RUN dpkg --unpack JLink_Linux_V832_x86_64.deb
RUN rm -f /var/lib/dpkg/info/jlink.postinst
RUN dpkg --configure jlink

USER vscode
WORKDIR /workspaces/nrf-devcontainer
